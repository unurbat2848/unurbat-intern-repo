services:
  # NestJS Application
  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-demo
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://nestuser:nestpass@postgres:5432/nestdb
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      # For development - mount source code
      - .:/app
      - /app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: nestdb
      POSTGRES_USER: nestuser
      POSTGRES_PASSWORD: nestpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network
    restart: unless-stopped

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

# Docker volumes for persistent data
volumes:
  postgres_data:

# Docker networks
networks:
  app-network:
    driver: bridge